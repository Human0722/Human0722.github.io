(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{497:function(a,t,e){"use strict";e.r(t);var s=e(21),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("blockquote"),a._v(" "),e("h3",{attrs:{id:"部署时默认不打包-lib"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署时默认不打包-lib"}},[a._v("#")]),a._v(" 部署时默认不打包 lib")]),a._v(" "),e("p",[a._v("一般我们会在项目根目录建立 lib 放 jar 包，也通过 idea 设置作用到项目了。可以正常编译、部署。但是访问时候，会报 ClassNotFoundException 异常，因为发布的时候没有带上 lib。以下为默认的部署配置，可以看到在 WEB-INF 目录下并没有 lib 库。 解决: 在右侧的 ssm (Project Library) 上选择 put into /WEB-INF/lib(idea version: 2021)")]),a._v(" "),e("p",[e("img",{attrs:{src:"/images/spring/nolib.jpg",alt:"nolib"}})]),a._v(" "),e("h3",{attrs:{id:"忽略非java文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略非java文件"}},[a._v("#")]),a._v(" 忽略非java文件")]),a._v(" "),e("p",[a._v("当新建好新的 web 工程的时候，目录结构如图。IDEA 打包时，会忽略 java 文件夹下所有非 "),e("code",[a._v(".java")]),a._v(" 的文件。 编写 Mybatis 的映射文件和接口时候。如 EmpMapper.xml 和 EmpMapper.java. 要求两个文件名相同，所属包也相同才可相互绑定。但将 EmpMapper.xml 放入 java 下的包中，部署时默认被忽略，访问时就会报错 没有匹配的映射文件。解决: 在 Resource 资源文件夹中存放 xml 文件。 如 com.abc.EmpMapper.java, 对应的就是 Resource/com/abc/EmpMapper.xml文件。")]),a._v(" "),e("p",[e("img",{attrs:{src:"/images/spring/ssmproject.jpg",alt:"ssmproject"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);