(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{373:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[s._v("#")]),s._v(" 基础概念")]),s._v(" "),a("p",[s._v('Docker 容器比虚拟机要轻量级，是因为 Docker 容器共享同一个宿主机的内核。 以往要获得独立环境的两个服务，起点是裸机，需要安装两个操作系统，在此基础上安装服务。而 Docker 直接借用宿主机的内核，起点是OS，直接定义环境。  Docker 镜像是 "应用程序和它运行的依赖环境"的封装.')]),s._v(" "),a("ul",[a("li",[s._v("镜像(Image)  ： 类似源码。")]),s._v(" "),a("li",[s._v("仓库(registry)  ： 类似一个放源码的远程仓库。")]),s._v(" "),a("li",[s._v("容器(Container)  : 类似进程。镜像运行起来就是一个镜像。")]),s._v(" "),a("li",[s._v("容器数据卷(Volumes)  : 类似容器外挂硬盘。容器关机后数据会清零，有持久化需求要使用。")])]),s._v(" "),a("h3",{attrs:{id:"基础命令集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础命令集"}},[s._v("#")]),s._v(" 基础命令集")]),s._v(" "),a("h4",{attrs:{id:"镜像相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像相关"}},[s._v("#")]),s._v(" 镜像相关")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" search geoserver "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 搜索镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull kartoza/geoserver:2.20.4 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从远程仓库拉取镜像到本地")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地所有镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi a441 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除镜像,a441是镜像id")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("docker images -q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有镜像")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"数据卷相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据卷相关"}},[s._v("#")]),s._v(" 数据卷相关")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：数据卷 的使用，类似于 Linux 下对目录或文件进行 mount，镜像中的被指定为挂载点的目录中的文件会复制到数据卷中（仅数据卷为空时会复制）。")])]),s._v(" "),a("p",[s._v("数据卷基础命令:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--help")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume create myVolume\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume inspect myVolume\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" myVolume\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume prune\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("数据卷进阶命令:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("挂载宿主机的文件夹到数据卷\n\n挂载网络文件系统"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NFS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("到数据卷\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果一个容器的配置文件需要持久化，通常是将数据卷挂载到文件夹中。比较好的做法是先通过镜像起一个临时容器，进入容器将需要持久化的配置文件复制出来，然后删除掉临时容器。修改这些配置文件，然后直接挂载到新起的正式容器中。")]),s._v(" "),a("h4",{attrs:{id:"网络相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络相关"}},[s._v("#")]),s._v(" 网络相关")]),s._v(" "),a("p",[s._v("网络基础命令：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--help")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create myNetwrok\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network inspcet myNetwork\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" myNetwork \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" connect myNetwork myContainer\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h4",{attrs:{id:"容器相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器相关"}},[s._v("#")]),s._v(" 容器相关")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" image "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ARG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),a("h3",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" docker-compose")]),s._v(" "),a("blockquote",[a("p",[s._v("docker-compose")])]),s._v(" "),a("h3",{attrs:{id:"k8s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k8s"}},[s._v("#")]),s._v(" k8s")])])}),[],!1,null,null,null);a.default=n.exports}}]);