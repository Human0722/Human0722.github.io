(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{501:function(l,t,v){"use strict";v.r(t);var _=v(21),e=Object(_.a)({},(function(){var l=this,t=l.$createElement,v=l._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[v("ol",[v("li",[v("p",[l._v("给 Bean 标注注解 @NotNull ....")])]),l._v(" "),v("li",[v("p",[l._v("给方法参数标注 @Valid，开启校验功能。")])]),l._v(" "),v("li",[v("p",[l._v("给校验的bean 后紧跟一个 BindResult, 就可以获得结果。")])]),l._v(" "),v("li",[v("p",[l._v("分组校验（多场景复杂功能）")]),l._v(" "),v("ol",[v("li",[l._v('@NotBlank(message="品牌名必须提交", groups={AddGroup.class, UpdateGroup.class})\n给检验注解标注什么时候才需要校验')]),l._v(" "),v("li",[l._v("@Validated({AddGroup.class})")]),l._v(" "),v("li",[l._v("默认没有指定分组的校验注解: @NotBlank, 在分组校验情况下不生效, 只会在 @Validated 生效")])])]),l._v(" "),v("li",[v("p",[l._v("自定义校验注解")]),l._v(" "),v("ol",[v("li",[l._v("编写一个自定义的校验注解")]),l._v(" "),v("li",[l._v("编写一个自定义的校验器")]),l._v(" "),v("li",[l._v("关联自定义的校验器和自定义的校验注解")])])])]),l._v(" "),v("p",[l._v("统一的异常处理")]),l._v(" "),v("ol",[v("li",[l._v("抽取异常处理类,使用 @ControllerAdvice")]),l._v(" "),v("li",[l._v("使用 @ExceptionHandler标注方法可以处理的异常")])])])}),[],!1,null,null,null);t.default=e.exports}}]);