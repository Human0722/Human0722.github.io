(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{343:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("声明式事务管理")])]),t._v(" "),a("h3",{attrs:{id:"事务简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务简介"}},[t._v("#")]),t._v(" 事务简介")]),t._v(" "),a("ol",[a("li",[t._v("事务是为了保证数据的完整性和一致性而引出的。")]),t._v(" "),a("li",[t._v("事务是一组逻辑上紧密关联的多个数据库操作，这些操作要么都执行，要么都不执行。")]),t._v(" "),a("li",[t._v("事务的四个属性(ACID)")])]),t._v(" "),a("ul",[a("li",[t._v("原子性 : 要么都执行，要么都不执行。")]),t._v(" "),a("li",[t._v("一致性 : 不论事务多少步操作，保证执行前数据是正确的，执行后是正确的。")]),t._v(" "),a("li",[t._v("隔离性 : 多个事务在并发执行过程中不会互相干扰。")]),t._v(" "),a("li",[t._v("持久性 : 对数据的修改保存下来。")])]),t._v(" "),a("h3",{attrs:{id:"spring-中的事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-中的事务"}},[t._v("#")]),t._v(" Spring 中的事务")]),t._v(" "),a("p",[t._v("可以和脱离 Spring 编程一样，通过原生的 JDBC API 进行事务管理，获取 Connection 对象后提交或者回滚，这种方式是"),a("strong",[t._v("编程式事务管理")]),t._v("。\n编程式事务管理中，管理的代码和业务代码混编会造成在吗冗余，可以利用上文的 AOP 编程和事务管理结合起来。将事务管理代码从业务中分离出来，这种方式是"),a("strong",[t._v("声明式事务管理")]),t._v("。\nSpring 在不同的事务管理 API 上定义了一个抽象层，通过配置的方式来管理事务。 事务管理器以普通的 bean 形式声明在 Spring IOC 容器中。")]),t._v(" "),a("p",[a("strong",[t._v("Spring 提供的事务管理器:")])]),t._v(" "),a("ul",[a("li",[t._v("DataSourceTransactionManager : 基于数据源的事务管理，通过 JDBC 存取。")]),t._v(" "),a("li",[t._v("JtaTransactionManager : 基于 JTA(java Transaction API) 的事务管理。")]),t._v(" "),a("li",[t._v("HibernateTransactionManager : 用 Hibernate 框架存取的事务管理。")])]),t._v(" "),a("h3",{attrs:{id:"初步实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初步实现"}},[t._v("#")]),t._v(" 初步实现")]),t._v(" "),a("p",[t._v("1.配置文件")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 配置事务管理器 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("transactionManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("org.springframework.jdbc.datasource.DataSourceTransactionManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 启用事务注解 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("tx:")]),t._v("annotation-driven")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("transaction-manager")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("transactionManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("2.在需要事务控制的方法上加上注解 "),a("code",[t._v("@Transactional")])]),t._v(" "),a("h3",{attrs:{id:"事务的传播行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的传播行为"}},[t._v("#")]),t._v(" 事务的传播行为")]),t._v(" "),a("p",[t._v("当事务方法被另一个事务方法调用时，必须指定事务应该如何传播。例如：方法可能继续在现有事务中运行，也可能开启一个新事务，并在自己的事务中运行。")]),t._v(" "),a("p",[t._v("事务的传播行为可以由传播属性指定，Spring 定义了 7 种类传播行为。")]),t._v(" "),a("blockquote",[a("p",[t._v("事务的传播属性一个在 @Transactional 注解的 propagation 属性中定义")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("传播属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("REQUIRED(默认)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果有事务在运行，当前方法就在这个事务内运行，否则，就启动一个新的事务，并在自己的事务内运行。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("REQUIRES_NEW")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("当前的方法必须启动新事务，并在它自己的事务内运行。如果有事务正在运行，应该将它挂起")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SUPPORTS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果有事务在运行，当前的方法就在这个事务内运行，否则它可以不运行在事务中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("NOT_SUPPORTED")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("当前的方法不应该运行在事务中，如果有运行的事务，将它挂起")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("MANDATORY")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("当前的方法必须运行在事务内部，如果没有正在运行的事务，就抛出异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("NEVER")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("当前的方法不应该运行在事务中，如果有运行的事务，就抛出异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("NESTED")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果有事务在运行，当前的方法就应该在这个事务的嵌套事务内运行，否则，就启动一个新的事务，并在它自己的事务内运行")])])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tpropagation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Propagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REQUIRED_NEW")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("说明：")])]),t._v(" "),a("ol",[a("li",[t._v("REQUIRED 传播行为： 如果购物车中有两件商品，其中一件商品是没货的，此时使用 "),a("code",[t._v("REQUIRED")]),t._v(" 属性，两件上品一件都无法购买。\n"),a("img",{attrs:{src:"/images/spring/transactional_REQUIRED.png",alt:"required"}})]),t._v(" "),a("li",[t._v("REQUIRED_NEW 传播行为： 如果购物车中有两件商品，其中一件商品是没货的，此时使用 "),a("code",[t._v("REQUIRES_NEW")]),t._v(" 属性，可以成功购买一件。\n"),a("img",{attrs:{src:"/images/spring/transactional_REQUIRED_NEW.png",alt:"requiredNew"}})])]),t._v(" "),a("h3",{attrs:{id:"事务的隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离级别"}},[t._v("#")]),t._v(" 事务的隔离级别")]),t._v(" "),a("h4",{attrs:{id:"数据库事务并发的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库事务并发的问题"}},[t._v("#")]),t._v(" 数据库事务并发的问题")]),t._v(" "),a("blockquote",[a("p",[t._v("假设有两个并发的事务 T1 和 T2")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("脏读")]),t._v(" "),a("ol",[a("li",[t._v("T1 把某条记录的 AGE 属性从 20 改成了 30")]),t._v(" "),a("li",[t._v("T2 读取了更新后的值: 30")]),t._v(" "),a("li",[t._v("T1 回滚，把 AGE 的值改成了 20")]),t._v(" "),a("li",[t._v("T2 读取的 30 就是一个无效值")])])]),t._v(" "),a("li",[a("code",[t._v("幻读")]),t._v(" "),a("ol",[a("li",[t._v("T1 读取了表中的一部分数据")]),t._v(" "),a("li",[t._v("T2 向表中插入了新的行")]),t._v(" "),a("li",[t._v("T1 读取表中数据，多出了一些行")])])]),t._v(" "),a("li",[a("code",[t._v("不可重复读")]),t._v(" "),a("ol",[a("li",[t._v("T1 读取了 AGE 的值为 20")]),t._v(" "),a("li",[t._v("T2 修改了 AGE 的值为 30")]),t._v(" "),a("li",[t._v("T1 再次读取 AGE 的值为 30，和第一次读取不一致")])])])]),t._v(" "),a("h4",{attrs:{id:"隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隔离级别"}},[t._v("#")]),t._v(" 隔离级别")]),t._v(" "),a("p",[t._v("数据库系统应具有并发隔离运行各个事务的能力，使他们不会相互影响，避免发生各种问题。 "),a("strong",[t._v("一个事务与其他事务隔离的程度被称为隔离级别.")]),t._v(" 不同的隔离级别拥有不同的干扰程度， 隔离级别越高，数据一致性就越好，但是并发性越弱。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("读未提交 READ UNCOMMITTED")]),t._v("\n允许 T1 读取 T2 修改但还未提交的数据")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("读已提交 READ COMMITTED")]),t._v("\n要求 T1 只能读取 T2 已经提交的数据")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("可重复读 REPEATABLE READ")]),t._v("\n确保 T1 可以多次从同一个字段中读取到相同的值，解决不可重复读的问题。即 "),a("strong",[t._v("T1 执行期间禁止其他事务对这个字段进行更新")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("串行化 SERIALIZABLE")]),t._v("\n确保 T1 可以多次从同一个表中读取到相同的行，解决幻读的问题。即 **T1 执行期间禁止其他事务对这个表进行更新操作，可以避免任何并发问题，但是效率低下。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("隔离级别解决并发问题对应表")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}}),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("脏读")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("不可重复读")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("幻读")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("读未提交")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("读已提交")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("可重复读")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("串行化")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("MySQL 四种隔离级别都支持，默认为可重复读。Oracle 不支持读未提交")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tisolation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("READ_COMMITTED")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h4",{attrs:{id:"spring-中指定隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-中指定隔离级别"}},[t._v("#")]),t._v(" Spring 中指定隔离级别")]),t._v(" "),a("p",[t._v("在 Spring 中用 "),a("code",[t._v("@Transactional")]),t._v(" 的 "),a("code",[t._v("isolation")]),t._v(" 属性中设置隔离级别.")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isolation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"READ_COMMITTED"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("purchase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"触发回滚的异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发回滚的异常"}},[t._v("#")]),t._v(" 触发回滚的异常")]),t._v(" "),a("p",[t._v("事务执行期间默认捕获到 "),a("code",[t._v("RuntimeException")]),t._v(" 或者 "),a("code",[t._v("Error")]),t._v("时回滚, 捕获到编译异常时不会滚。 也可以通过属性设置，指定回滚和不回滚的触发异常条件。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rollbackFor属性： 指定遇到时必须回滚的异常类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// noRollbackFor属性: 指定遇到时不会滚的异常类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propagation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Propagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REQUIRES_NEW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t       isolation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("READ_COMMITTED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t       rollbackFor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t       noRollbackFor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserNotFoundException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("purchase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" isbn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h3",{attrs:{id:"事务的超时和只读属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的超时和只读属性"}},[t._v("#")]),t._v(" 事务的超时和只读属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("超时事务属性:")]),t._v(" 事务在强制回滚之前可以保持多久，可以防止长期运行事务占用资源.")]),t._v(" "),a("li",[a("code",[t._v("只读事务属性:")]),t._v(" 表示事务是读取数据但不更新数据， 可以帮助数据库优化引擎优化事务")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\treadOnly"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ttimeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);